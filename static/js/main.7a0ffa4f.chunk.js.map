{"version":3,"sources":["components/Cards/CardComponent.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","titleColor","class","cx","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","styles","formControl","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7a0ffa4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst CardComponent = ({\r\n  className,\r\n  cardTitle,\r\n  value,\r\n  lastUpdate,\r\n  cardSubtitle,\r\n  titleColor,\r\n}) => {\r\n  return (\r\n    <div class={cx(\"col mb-4\")}>\r\n      <div className={cx(\"card\", className)}>\r\n        <div className=\"card-body\">\r\n          <h5 className={cx(\"card-title\", titleColor)}>{cardTitle}</h5>\r\n          <h5>\r\n            <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n          </h5>\r\n          <p className=\"card-text\">{new Date(lastUpdate).toDateString()}</p>\r\n          <h6 className={cx(\"card-subtitle\", \"mb-2\", \"text-muted\")}>\r\n            {cardSubtitle}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nimport CardComponent from \"./CardComponent\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <>\r\n      <div className={cx(\"row\", \"row-cols-1\", \"row-cols-md-3\")}>\r\n        <CardComponent\r\n          className=\"border-warning\"\r\n          cardTitle=\"Infected\"\r\n          value={confirmed.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of active cases from COVID-19\"\r\n          titleColor=\"text-warning\"\r\n        />\r\n        <CardComponent\r\n          className=\"border-success\"\r\n          cardTitle=\"Recovered\"\r\n          value={recovered.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of recoveries from COVID-19\"\r\n          titleColor=\"text-success\"\r\n        />\r\n        <CardComponent\r\n          className=\"border-danger\"\r\n          cardTitle=\"Deaths\"\r\n          value={deaths.value}\r\n          lastUpdate={lastUpdate}\r\n          cardSubtitle=\"Number of deaths caused by COVID-19\"\r\n          titleColor=\"text-danger\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#333fff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className=\"row\">{country ? barChart : lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className={cx(\"col-sm-12\", \"col-md-6\", \"offset-md-3\")}>\r\n        <select\r\n          className={cx(\"form-control\", styles.formControl)}\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchData } from \"./api\";\r\nimport cx from \"classnames\";\r\n\r\nimport coronaImage from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className={cx(\"row\", \"pt-5\", \"pb-5\")}>\r\n          <div className={cx(\"col-12\", \"d-flex\", \"justify-content-center\")}>\r\n            <img className=\"img-fluid\" src={coronaImage} alt=\"COVID-19\" />\r\n          </div>\r\n        </div>\r\n\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__327mn\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}